// Breakpoints
@mixin min-screen ($size: md) {
    @media (min-width: breakpoint($size)) {
        @content;
    }
}

@mixin max-screen ($size: md) {
    @media (max-width: breakpoint-max($size)) {
        @content;
    }
}

// Utils
@mixin no-margin {
    margin: 0;
}

@mixin no-padding {
    padding: 0;
}

@mixin no-space {
    @include no-padding;
    @include no-margin;
}

@mixin fix-h {
    height: 100%;
}

@mixin fix-w {
    width: 100%;
}

@mixin fix-hw {
    @include fix-h;
    @include fix-w;
}

// Typography
// Font sizes 
// Paragraph Columns
@mixin type-col($col, $gap: md) {
    column-count: 1;
    @include min-screen() {
        column-count: $col;
        column-gap: size($gap);
    }
}

// Theme Colors
@mixin color($color: 'primary', $bg: false) {
    @if ($bg) {
        background-color: get-color($color);
    }
    @else {
        color: get-color($color);
    }
}

// Backgrounds
@mixin bg-dark {
    @include color('dark', true);
    @include color('light');
}

@mixin bg-transparent {
    background-color: transparent;
}

// Elements
// Buttons
@mixin btn ($color, $border: false, $text: 'light') {
    display: inline-block;
    padding: 1rem 2rem;
    @if $border {
        @include color($color);
        @include bg-transparent;
        border: 2px solid;
        border-color: get-color($color);
        transition: all $transition ease-in-out;
        &:hover {
            @include color($color, true);
            @include color($text);
        }
    }
    @else {
        background-color: get-color($color);
        color: get-color($text);
    }
}

@mixin btnRadius($radius) {
    border-radius: size($radius);
}

// Form
@mixin input-defaults {
    @include fix-hw;
    outline: none;
    border: none;
    background: none;
}

@mixin input-transform {
    transform: translateY(-100%);
    font-size: font(sm);
    @include color('primary');
}

@mixin label-defaults {
    @include fix-hw;
    position: absolute;
    font-size: font(sm);
    pointer-events: none;
}

@mixin label-after {
    position: absolute;
    content: "";
    @include fix-hw;
    border-bottom: 1px solid get-color('primary');
    transform: translateX(-100%);
    transition: all $transition ease;
}

// Layouts
// Grid
@mixin grid {
    display: grid;
}

// Columns '2', '3', '4', '5', '6'
@mixin grid-auto($size) {
    @include grid;
    @include max-screen(xxl) {
        grid-template-columns: repeat(auto-fit, minmax(grid-col($size, true), 1fr));
    }
    @include min-screen(sm) {
        grid-template-columns: 1fr;
    }
    @include min-screen() {
        grid-template-columns: repeat(auto-fit, minmax(grid-col($size), 1fr));
    }
}

@mixin grid-col($repeat) {
    @include grid;
    grid-template-columns: 1fr;
    @include min-screen() {
        grid-template-columns: repeat($repeat, 1fr);
    }
}

@mixin grid-2($left: true) {
    @include grid;
    grid-template-columns: 1fr;
    @include min-screen() {
        @if $left {
            grid-template-columns: 2fr 1fr;
        }
        @else {
            grid-template-columns: 1fr 2fr;
        }
    }
}

@mixin grid-col-span($col) {
    grid-column: span $col;
}

@mixin grid-center {
    place-items: center center;
}

// Flexbox
@mixin flex {
    display: flex;
}

@mixin flex-row {
    flex-direction: row;
}

@mixin flex-col {
    flex-direction: column;
}

@mixin flex-jc-sa {
    justify-content: space-around;
}

@mixin flex-jc-sb {
    justify-content: space-between;
}

@mixin flex-jc-c {
    justify-content: center;
}

@mixin flex-ai-c {
    align-items: center;
}

@mixin navbar {
    @include flex;
    @include flex-jc-sb;
    @include min-screen() {
        @include flex-col;
        @include flex-jc-sa;
        @include flex-ai-c;
    }
}

// Effects
@mixin shadow {
    box-shadow: 0 3px 10px rgba(0, 0, 0, 0.3);
}

@mixin shadow-high {
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
}